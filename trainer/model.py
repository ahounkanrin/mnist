# -*- coding: utf-8 -*-
"""model.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1j58jBtBZGl6jCVnri-yW33REIWdSBk2P
"""

from __future__ import absolute_import
from __future__ import division
from __future__ import print_function

import tensorflow as tf
import numpy as np
from tensorflow import keras
import os


# Define the model
model = keras.Sequential(
[
    keras.layers.Conv2D(input_shape=(28,28,1), filters=6, kernel_size=5, activation=tf.nn.relu, name='c1'),
    keras.layers.MaxPool2D(pool_size=2, strides=2, name='s2'),
    keras.layers.Conv2D(filters=16, kernel_size=5, activation=tf.nn.relu, name='c3'),
    keras.layers.MaxPool2D(pool_size=2, strides=2, name='s4'),
    keras.layers.Conv2D(filters=120, kernel_size= 4, activation='relu', name='c5'),
    keras.layers.Flatten(),
    keras.layers.Dense(units=84, activation='relu', name='f6'),
    keras.layers.Dense(units=10, activation=tf.nn.softmax, name='logits')
]
)


# Compile the model

model.compile(
    optimizer=tf.train.GradientDescentOptimizer(0.001),
    loss='sparse_categorical_crossentropy',
    metrics=['accuracy']
)

model.summary()

model = keras.estimator.model_to_estimator(keras_model=model)
# Convert the data into 32floats required by Estimator API



